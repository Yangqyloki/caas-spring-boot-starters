# docker-compose up
# docker-compose down

# to force delete the volume, and start from scratch
# docker-compose up -d --force-recreate
# docker-compose down --volumes --remove-orphans

# requires docker engine 17.06.0+
version: '3.3'
services:
  postgres:
    image: postgres:9.6.4
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
#   RabbitMQ management UI console, user/password: guest/guest
#   http://localhost:15672
  rabbitmq:
    image: rabbitmq:3.6-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: logging-rabbitmq
  zookeeper-starters:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper-starters
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker-starters:
    image: confluentinc/cp-enterprise-kafka
    hostname: broker-starters
    container_name: broker-starters
    depends_on:
      - zookeeper-starters
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-starters:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-starters:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-starters:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper-starters:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
